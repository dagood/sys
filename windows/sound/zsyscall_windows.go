// Code generated by 'go generate'; DO NOT EDIT.

package sound

import (
	"syscall"
	"unsafe"

	"golang.org/x/sys/windows"
)

var _ unsafe.Pointer

// Do the interface allocations only once for common
// Errno values.
const (
	errnoERROR_IO_PENDING = 997
)

var (
	errERROR_IO_PENDING error = syscall.Errno(errnoERROR_IO_PENDING)
	errERROR_EINVAL     error = syscall.EINVAL
)

// errnoErr returns common boxed Errno values, to prevent
// allocations at runtime.
func errnoErr(e syscall.Errno) error {
	switch e {
	case 0:
		return errERROR_EINVAL
	case errnoERROR_IO_PENDING:
		return errERROR_IO_PENDING
	}
	// TODO: add more here, after collecting data on the common
	// error values see on Windows. (perhaps when running
	// all.bat?)
	return e
}

var (
	modmmdevapi                   = windows.NewLazySystemDLL("mmdevapi.dll")
	modmsacm32                    = windows.NewLazySystemDLL("msacm32.dll")
	modole32                      = windows.NewLazySystemDLL("ole32.dll")
	modwindows_media_mediacontrol = windows.NewLazySystemDLL("windows.media.mediacontrol.dll")
	modwinmm                      = windows.NewLazySystemDLL("winmm.dll")

	procActivateAudioInterfaceAsync                            = modmmdevapi.NewProc("ActivateAudioInterfaceAsync")
	procacmDriverAddA                                          = modmsacm32.NewProc("acmDriverAddA")
	procacmDriverAddW                                          = modmsacm32.NewProc("acmDriverAddW")
	procacmDriverClose                                         = modmsacm32.NewProc("acmDriverClose")
	procacmDriverDetailsA                                      = modmsacm32.NewProc("acmDriverDetailsA")
	procacmDriverDetailsW                                      = modmsacm32.NewProc("acmDriverDetailsW")
	procacmDriverEnum                                          = modmsacm32.NewProc("acmDriverEnum")
	procacmDriverID                                            = modmsacm32.NewProc("acmDriverID")
	procacmDriverMessage                                       = modmsacm32.NewProc("acmDriverMessage")
	procacmDriverOpen                                          = modmsacm32.NewProc("acmDriverOpen")
	procacmDriverPriority                                      = modmsacm32.NewProc("acmDriverPriority")
	procacmDriverRemove                                        = modmsacm32.NewProc("acmDriverRemove")
	procacmFilterChooseA                                       = modmsacm32.NewProc("acmFilterChooseA")
	procacmFilterChooseW                                       = modmsacm32.NewProc("acmFilterChooseW")
	procacmFilterDetailsA                                      = modmsacm32.NewProc("acmFilterDetailsA")
	procacmFilterDetailsW                                      = modmsacm32.NewProc("acmFilterDetailsW")
	procacmFilterEnumA                                         = modmsacm32.NewProc("acmFilterEnumA")
	procacmFilterEnumW                                         = modmsacm32.NewProc("acmFilterEnumW")
	procacmFilterTagDetailsA                                   = modmsacm32.NewProc("acmFilterTagDetailsA")
	procacmFilterTagDetailsW                                   = modmsacm32.NewProc("acmFilterTagDetailsW")
	procacmFilterTagEnumA                                      = modmsacm32.NewProc("acmFilterTagEnumA")
	procacmFilterTagEnumW                                      = modmsacm32.NewProc("acmFilterTagEnumW")
	procacmFormatChooseA                                       = modmsacm32.NewProc("acmFormatChooseA")
	procacmFormatChooseW                                       = modmsacm32.NewProc("acmFormatChooseW")
	procacmFormatDetailsA                                      = modmsacm32.NewProc("acmFormatDetailsA")
	procacmFormatDetailsW                                      = modmsacm32.NewProc("acmFormatDetailsW")
	procacmFormatEnumA                                         = modmsacm32.NewProc("acmFormatEnumA")
	procacmFormatEnumW                                         = modmsacm32.NewProc("acmFormatEnumW")
	procacmFormatSuggest                                       = modmsacm32.NewProc("acmFormatSuggest")
	procacmFormatTagDetailsA                                   = modmsacm32.NewProc("acmFormatTagDetailsA")
	procacmFormatTagDetailsW                                   = modmsacm32.NewProc("acmFormatTagDetailsW")
	procacmFormatTagEnumA                                      = modmsacm32.NewProc("acmFormatTagEnumA")
	procacmFormatTagEnumW                                      = modmsacm32.NewProc("acmFormatTagEnumW")
	procacmGetVersion                                          = modmsacm32.NewProc("acmGetVersion")
	procacmMetrics                                             = modmsacm32.NewProc("acmMetrics")
	procacmStreamClose                                         = modmsacm32.NewProc("acmStreamClose")
	procacmStreamConvert                                       = modmsacm32.NewProc("acmStreamConvert")
	procacmStreamMessage                                       = modmsacm32.NewProc("acmStreamMessage")
	procacmStreamOpen                                          = modmsacm32.NewProc("acmStreamOpen")
	procacmStreamPrepareHeader                                 = modmsacm32.NewProc("acmStreamPrepareHeader")
	procacmStreamReset                                         = modmsacm32.NewProc("acmStreamReset")
	procacmStreamSize                                          = modmsacm32.NewProc("acmStreamSize")
	procacmStreamUnprepareHeader                               = modmsacm32.NewProc("acmStreamUnprepareHeader")
	procCoRegisterMessageFilter                                = modole32.NewProc("CoRegisterMessageFilter")
	procCreateCaptureAudioStateMonitor                         = modwindows_media_mediacontrol.NewProc("CreateCaptureAudioStateMonitor")
	procCreateCaptureAudioStateMonitorForCategory              = modwindows_media_mediacontrol.NewProc("CreateCaptureAudioStateMonitorForCategory")
	procCreateCaptureAudioStateMonitorForCategoryAndDeviceId   = modwindows_media_mediacontrol.NewProc("CreateCaptureAudioStateMonitorForCategoryAndDeviceId")
	procCreateCaptureAudioStateMonitorForCategoryAndDeviceRole = modwindows_media_mediacontrol.NewProc("CreateCaptureAudioStateMonitorForCategoryAndDeviceRole")
	procCreateRenderAudioStateMonitor                          = modwindows_media_mediacontrol.NewProc("CreateRenderAudioStateMonitor")
	procCreateRenderAudioStateMonitorForCategory               = modwindows_media_mediacontrol.NewProc("CreateRenderAudioStateMonitorForCategory")
	procCreateRenderAudioStateMonitorForCategoryAndDeviceId    = modwindows_media_mediacontrol.NewProc("CreateRenderAudioStateMonitorForCategoryAndDeviceId")
	procCreateRenderAudioStateMonitorForCategoryAndDeviceRole  = modwindows_media_mediacontrol.NewProc("CreateRenderAudioStateMonitorForCategoryAndDeviceRole")
	procPlaySoundA                                             = modwinmm.NewProc("PlaySoundA")
	procPlaySoundW                                             = modwinmm.NewProc("PlaySoundW")
	procauxGetDevCapsA                                         = modwinmm.NewProc("auxGetDevCapsA")
	procauxGetDevCapsW                                         = modwinmm.NewProc("auxGetDevCapsW")
	procauxGetNumDevs                                          = modwinmm.NewProc("auxGetNumDevs")
	procauxGetVolume                                           = modwinmm.NewProc("auxGetVolume")
	procauxOutMessage                                          = modwinmm.NewProc("auxOutMessage")
	procauxSetVolume                                           = modwinmm.NewProc("auxSetVolume")
	procmidiConnect                                            = modwinmm.NewProc("midiConnect")
	procmidiDisconnect                                         = modwinmm.NewProc("midiDisconnect")
	procmidiInAddBuffer                                        = modwinmm.NewProc("midiInAddBuffer")
	procmidiInClose                                            = modwinmm.NewProc("midiInClose")
	procmidiInGetDevCapsA                                      = modwinmm.NewProc("midiInGetDevCapsA")
	procmidiInGetDevCapsW                                      = modwinmm.NewProc("midiInGetDevCapsW")
	procmidiInGetErrorTextA                                    = modwinmm.NewProc("midiInGetErrorTextA")
	procmidiInGetErrorTextW                                    = modwinmm.NewProc("midiInGetErrorTextW")
	procmidiInGetID                                            = modwinmm.NewProc("midiInGetID")
	procmidiInGetNumDevs                                       = modwinmm.NewProc("midiInGetNumDevs")
	procmidiInMessage                                          = modwinmm.NewProc("midiInMessage")
	procmidiInOpen                                             = modwinmm.NewProc("midiInOpen")
	procmidiInPrepareHeader                                    = modwinmm.NewProc("midiInPrepareHeader")
	procmidiInReset                                            = modwinmm.NewProc("midiInReset")
	procmidiInStart                                            = modwinmm.NewProc("midiInStart")
	procmidiInStop                                             = modwinmm.NewProc("midiInStop")
	procmidiInUnprepareHeader                                  = modwinmm.NewProc("midiInUnprepareHeader")
	procmidiOutCacheDrumPatches                                = modwinmm.NewProc("midiOutCacheDrumPatches")
	procmidiOutCachePatches                                    = modwinmm.NewProc("midiOutCachePatches")
	procmidiOutClose                                           = modwinmm.NewProc("midiOutClose")
	procmidiOutGetDevCapsA                                     = modwinmm.NewProc("midiOutGetDevCapsA")
	procmidiOutGetDevCapsW                                     = modwinmm.NewProc("midiOutGetDevCapsW")
	procmidiOutGetErrorTextA                                   = modwinmm.NewProc("midiOutGetErrorTextA")
	procmidiOutGetErrorTextW                                   = modwinmm.NewProc("midiOutGetErrorTextW")
	procmidiOutGetID                                           = modwinmm.NewProc("midiOutGetID")
	procmidiOutGetNumDevs                                      = modwinmm.NewProc("midiOutGetNumDevs")
	procmidiOutGetVolume                                       = modwinmm.NewProc("midiOutGetVolume")
	procmidiOutLongMsg                                         = modwinmm.NewProc("midiOutLongMsg")
	procmidiOutMessage                                         = modwinmm.NewProc("midiOutMessage")
	procmidiOutOpen                                            = modwinmm.NewProc("midiOutOpen")
	procmidiOutPrepareHeader                                   = modwinmm.NewProc("midiOutPrepareHeader")
	procmidiOutReset                                           = modwinmm.NewProc("midiOutReset")
	procmidiOutSetVolume                                       = modwinmm.NewProc("midiOutSetVolume")
	procmidiOutShortMsg                                        = modwinmm.NewProc("midiOutShortMsg")
	procmidiOutUnprepareHeader                                 = modwinmm.NewProc("midiOutUnprepareHeader")
	procmidiStreamClose                                        = modwinmm.NewProc("midiStreamClose")
	procmidiStreamOpen                                         = modwinmm.NewProc("midiStreamOpen")
	procmidiStreamOut                                          = modwinmm.NewProc("midiStreamOut")
	procmidiStreamPause                                        = modwinmm.NewProc("midiStreamPause")
	procmidiStreamPosition                                     = modwinmm.NewProc("midiStreamPosition")
	procmidiStreamProperty                                     = modwinmm.NewProc("midiStreamProperty")
	procmidiStreamRestart                                      = modwinmm.NewProc("midiStreamRestart")
	procmidiStreamStop                                         = modwinmm.NewProc("midiStreamStop")
	procmixerClose                                             = modwinmm.NewProc("mixerClose")
	procmixerGetControlDetailsA                                = modwinmm.NewProc("mixerGetControlDetailsA")
	procmixerGetControlDetailsW                                = modwinmm.NewProc("mixerGetControlDetailsW")
	procmixerGetDevCapsA                                       = modwinmm.NewProc("mixerGetDevCapsA")
	procmixerGetDevCapsW                                       = modwinmm.NewProc("mixerGetDevCapsW")
	procmixerGetID                                             = modwinmm.NewProc("mixerGetID")
	procmixerGetLineControlsA                                  = modwinmm.NewProc("mixerGetLineControlsA")
	procmixerGetLineControlsW                                  = modwinmm.NewProc("mixerGetLineControlsW")
	procmixerGetLineInfoA                                      = modwinmm.NewProc("mixerGetLineInfoA")
	procmixerGetLineInfoW                                      = modwinmm.NewProc("mixerGetLineInfoW")
	procmixerGetNumDevs                                        = modwinmm.NewProc("mixerGetNumDevs")
	procmixerMessage                                           = modwinmm.NewProc("mixerMessage")
	procmixerOpen                                              = modwinmm.NewProc("mixerOpen")
	procmixerSetControlDetails                                 = modwinmm.NewProc("mixerSetControlDetails")
	procsndPlaySoundA                                          = modwinmm.NewProc("sndPlaySoundA")
	procsndPlaySoundW                                          = modwinmm.NewProc("sndPlaySoundW")
	procwaveInAddBuffer                                        = modwinmm.NewProc("waveInAddBuffer")
	procwaveInClose                                            = modwinmm.NewProc("waveInClose")
	procwaveInGetDevCapsA                                      = modwinmm.NewProc("waveInGetDevCapsA")
	procwaveInGetDevCapsW                                      = modwinmm.NewProc("waveInGetDevCapsW")
	procwaveInGetErrorTextA                                    = modwinmm.NewProc("waveInGetErrorTextA")
	procwaveInGetErrorTextW                                    = modwinmm.NewProc("waveInGetErrorTextW")
	procwaveInGetID                                            = modwinmm.NewProc("waveInGetID")
	procwaveInGetNumDevs                                       = modwinmm.NewProc("waveInGetNumDevs")
	procwaveInGetPosition                                      = modwinmm.NewProc("waveInGetPosition")
	procwaveInMessage                                          = modwinmm.NewProc("waveInMessage")
	procwaveInOpen                                             = modwinmm.NewProc("waveInOpen")
	procwaveInPrepareHeader                                    = modwinmm.NewProc("waveInPrepareHeader")
	procwaveInReset                                            = modwinmm.NewProc("waveInReset")
	procwaveInStart                                            = modwinmm.NewProc("waveInStart")
	procwaveInStop                                             = modwinmm.NewProc("waveInStop")
	procwaveInUnprepareHeader                                  = modwinmm.NewProc("waveInUnprepareHeader")
	procwaveOutBreakLoop                                       = modwinmm.NewProc("waveOutBreakLoop")
	procwaveOutClose                                           = modwinmm.NewProc("waveOutClose")
	procwaveOutGetDevCapsA                                     = modwinmm.NewProc("waveOutGetDevCapsA")
	procwaveOutGetDevCapsW                                     = modwinmm.NewProc("waveOutGetDevCapsW")
	procwaveOutGetErrorTextA                                   = modwinmm.NewProc("waveOutGetErrorTextA")
	procwaveOutGetErrorTextW                                   = modwinmm.NewProc("waveOutGetErrorTextW")
	procwaveOutGetID                                           = modwinmm.NewProc("waveOutGetID")
	procwaveOutGetNumDevs                                      = modwinmm.NewProc("waveOutGetNumDevs")
	procwaveOutGetPitch                                        = modwinmm.NewProc("waveOutGetPitch")
	procwaveOutGetPlaybackRate                                 = modwinmm.NewProc("waveOutGetPlaybackRate")
	procwaveOutGetPosition                                     = modwinmm.NewProc("waveOutGetPosition")
	procwaveOutGetVolume                                       = modwinmm.NewProc("waveOutGetVolume")
	procwaveOutMessage                                         = modwinmm.NewProc("waveOutMessage")
	procwaveOutOpen                                            = modwinmm.NewProc("waveOutOpen")
	procwaveOutPause                                           = modwinmm.NewProc("waveOutPause")
	procwaveOutPrepareHeader                                   = modwinmm.NewProc("waveOutPrepareHeader")
	procwaveOutReset                                           = modwinmm.NewProc("waveOutReset")
	procwaveOutRestart                                         = modwinmm.NewProc("waveOutRestart")
	procwaveOutSetPitch                                        = modwinmm.NewProc("waveOutSetPitch")
	procwaveOutSetPlaybackRate                                 = modwinmm.NewProc("waveOutSetPlaybackRate")
	procwaveOutSetVolume                                       = modwinmm.NewProc("waveOutSetVolume")
	procwaveOutUnprepareHeader                                 = modwinmm.NewProc("waveOutUnprepareHeader")
	procwaveOutWrite                                           = modwinmm.NewProc("waveOutWrite")
)

func ActivateAudioInterfaceAsync(deviceInterfacePath *PWSTRElement, riid *Guid, activationParams *PROPVARIANT, completionHandler *IActivateAudioInterfaceCompletionHandler, activationOperation **IActivateAudioInterfaceAsyncOperation) (r HRESULT) {
	r0, _, _ := syscall.Syscall6(procActivateAudioInterfaceAsync.Addr(), 5, uintptr(unsafe.Pointer(deviceInterfacePath)), uintptr(unsafe.Pointer(riid)), uintptr(unsafe.Pointer(activationParams)), uintptr(unsafe.Pointer(completionHandler)), uintptr(unsafe.Pointer(activationOperation)), 0)
	r = HRESULT(r0)
	return
}

func AcmDriverAddA(phadid *uintptr, hinstModule HINSTANCE, lParam LPARAM, dwPriority uint32, fdwAdd uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmDriverAddA.Addr(), 5, uintptr(unsafe.Pointer(phadid)), uintptr(hinstModule), uintptr(lParam), uintptr(dwPriority), uintptr(fdwAdd), 0)
	r = uint32(r0)
	return
}

func AcmDriverAddW(phadid *uintptr, hinstModule HINSTANCE, lParam LPARAM, dwPriority uint32, fdwAdd uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmDriverAddW.Addr(), 5, uintptr(unsafe.Pointer(phadid)), uintptr(hinstModule), uintptr(lParam), uintptr(dwPriority), uintptr(fdwAdd), 0)
	r = uint32(r0)
	return
}

func AcmDriverClose(had HACMDRIVER, fdwClose uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverClose.Addr(), 2, uintptr(had), uintptr(fdwClose), 0)
	r = uint32(r0)
	return
}

func AcmDriverDetailsA(hadid HACMDRIVERID, padd *ACMDRIVERDETAILSA, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverDetailsA.Addr(), 3, uintptr(hadid), uintptr(unsafe.Pointer(padd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmDriverDetailsW(hadid HACMDRIVERID, padd *ACMDRIVERDETAILSW, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverDetailsW.Addr(), 3, uintptr(hadid), uintptr(unsafe.Pointer(padd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmDriverEnum(fnCallback ACMDRIVERENUMCB, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverEnum.Addr(), 3, uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum))
	r = uint32(r0)
	return
}

func AcmDriverID(hao HACMOBJ, phadid *uintptr, fdwDriverID uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverID.Addr(), 3, uintptr(hao), uintptr(unsafe.Pointer(phadid)), uintptr(fdwDriverID))
	r = uint32(r0)
	return
}

func AcmDriverMessage(had HACMDRIVER, uMsg uint32, lParam1 LPARAM, lParam2 LPARAM) (r LRESULT) {
	r0, _, _ := syscall.Syscall6(procacmDriverMessage.Addr(), 4, uintptr(had), uintptr(uMsg), uintptr(lParam1), uintptr(lParam2), 0, 0)
	r = LRESULT(r0)
	return
}

func AcmDriverOpen(phad *uintptr, hadid HACMDRIVERID, fdwOpen uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverOpen.Addr(), 3, uintptr(unsafe.Pointer(phad)), uintptr(hadid), uintptr(fdwOpen))
	r = uint32(r0)
	return
}

func AcmDriverPriority(hadid HACMDRIVERID, dwPriority uint32, fdwPriority uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverPriority.Addr(), 3, uintptr(hadid), uintptr(dwPriority), uintptr(fdwPriority))
	r = uint32(r0)
	return
}

func AcmDriverRemove(hadid HACMDRIVERID, fdwRemove uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmDriverRemove.Addr(), 2, uintptr(hadid), uintptr(fdwRemove), 0)
	r = uint32(r0)
	return
}

func AcmFilterChooseA(pafltrc *ACMFILTERCHOOSEA) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFilterChooseA.Addr(), 1, uintptr(unsafe.Pointer(pafltrc)), 0, 0)
	r = uint32(r0)
	return
}

func AcmFilterChooseW(pafltrc *ACMFILTERCHOOSEW) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFilterChooseW.Addr(), 1, uintptr(unsafe.Pointer(pafltrc)), 0, 0)
	r = uint32(r0)
	return
}

func AcmFilterDetailsA(had HACMDRIVER, pafd *ACMFILTERDETAILSA, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFilterDetailsA.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFilterDetailsW(had HACMDRIVER, pafd *ACMFILTERDETAILSW, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFilterDetailsW.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFilterEnumA(had HACMDRIVER, pafd *ACMFILTERDETAILSA, fnCallback ACMFILTERENUMCBA, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFilterEnumA.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmFilterEnumW(had HACMDRIVER, pafd *ACMFILTERDETAILSW, fnCallback ACMFILTERENUMCBW, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFilterEnumW.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmFilterTagDetailsA(had HACMDRIVER, paftd *ACMFILTERTAGDETAILSA, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFilterTagDetailsA.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFilterTagDetailsW(had HACMDRIVER, paftd *ACMFILTERTAGDETAILSW, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFilterTagDetailsW.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFilterTagEnumA(had HACMDRIVER, paftd *ACMFILTERTAGDETAILSA, fnCallback ACMFILTERTAGENUMCBA, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFilterTagEnumA.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmFilterTagEnumW(had HACMDRIVER, paftd *ACMFILTERTAGDETAILSW, fnCallback ACMFILTERTAGENUMCBW, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFilterTagEnumW.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmFormatChooseA(pafmtc *ACMFORMATCHOOSEA) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFormatChooseA.Addr(), 1, uintptr(unsafe.Pointer(pafmtc)), 0, 0)
	r = uint32(r0)
	return
}

func AcmFormatChooseW(pafmtc *ACMFORMATCHOOSEW) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFormatChooseW.Addr(), 1, uintptr(unsafe.Pointer(pafmtc)), 0, 0)
	r = uint32(r0)
	return
}

func AcmFormatDetailsA(had HACMDRIVER, pafd *ACMFORMATDETAILSA, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFormatDetailsA.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFormatDetailsW(had HACMDRIVER, pafd *TACMFORMATDETAILSW, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFormatDetailsW.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFormatEnumA(had HACMDRIVER, pafd *ACMFORMATDETAILSA, fnCallback ACMFORMATENUMCBA, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFormatEnumA.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmFormatEnumW(had HACMDRIVER, pafd *TACMFORMATDETAILSW, fnCallback ACMFORMATENUMCBW, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFormatEnumW.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(pafd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmFormatSuggest(had HACMDRIVER, pwfxSrc *WAVEFORMATEX, pwfxDst *WAVEFORMATEX, cbwfxDst uint32, fdwSuggest uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFormatSuggest.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(pwfxSrc)), uintptr(unsafe.Pointer(pwfxDst)), uintptr(cbwfxDst), uintptr(fdwSuggest), 0)
	r = uint32(r0)
	return
}

func AcmFormatTagDetailsA(had HACMDRIVER, paftd *ACMFORMATTAGDETAILSA, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFormatTagDetailsA.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFormatTagDetailsW(had HACMDRIVER, paftd *ACMFORMATTAGDETAILSW, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmFormatTagDetailsW.Addr(), 3, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func AcmFormatTagEnumA(had HACMDRIVER, paftd *ACMFORMATTAGDETAILSA, fnCallback ACMFORMATTAGENUMCBA, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFormatTagEnumA.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmFormatTagEnumW(had HACMDRIVER, paftd *ACMFORMATTAGDETAILSW, fnCallback ACMFORMATTAGENUMCBW, dwInstance uintptr, fdwEnum uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmFormatTagEnumW.Addr(), 5, uintptr(had), uintptr(unsafe.Pointer(paftd)), uintptr(fnCallback), uintptr(dwInstance), uintptr(fdwEnum), 0)
	r = uint32(r0)
	return
}

func AcmGetVersion() (r uint32) {
	r0, _, _ := syscall.Syscall(procacmGetVersion.Addr(), 0, 0, 0, 0)
	r = uint32(r0)
	return
}

func AcmMetrics(hao HACMOBJ, uMetric uint32, pMetric unsafe.Pointer) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmMetrics.Addr(), 3, uintptr(hao), uintptr(uMetric), uintptr(pMetric))
	r = uint32(r0)
	return
}

func AcmStreamClose(has HACMSTREAM, fdwClose uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmStreamClose.Addr(), 2, uintptr(has), uintptr(fdwClose), 0)
	r = uint32(r0)
	return
}

func AcmStreamConvert(has HACMSTREAM, pash *ACMSTREAMHEADER, fdwConvert uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmStreamConvert.Addr(), 3, uintptr(has), uintptr(unsafe.Pointer(pash)), uintptr(fdwConvert))
	r = uint32(r0)
	return
}

func AcmStreamMessage(has HACMSTREAM, uMsg uint32, lParam1 LPARAM, lParam2 LPARAM) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmStreamMessage.Addr(), 4, uintptr(has), uintptr(uMsg), uintptr(lParam1), uintptr(lParam2), 0, 0)
	r = uint32(r0)
	return
}

func AcmStreamOpen(phas *uintptr, had HACMDRIVER, pwfxSrc *WAVEFORMATEX, pwfxDst *WAVEFORMATEX, pwfltr *WAVEFILTER, dwCallback uintptr, dwInstance uintptr, fdwOpen uint32) (r uint32) {
	r0, _, _ := syscall.Syscall9(procacmStreamOpen.Addr(), 8, uintptr(unsafe.Pointer(phas)), uintptr(had), uintptr(unsafe.Pointer(pwfxSrc)), uintptr(unsafe.Pointer(pwfxDst)), uintptr(unsafe.Pointer(pwfltr)), uintptr(dwCallback), uintptr(dwInstance), uintptr(fdwOpen), 0)
	r = uint32(r0)
	return
}

func AcmStreamPrepareHeader(has HACMSTREAM, pash *ACMSTREAMHEADER, fdwPrepare uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmStreamPrepareHeader.Addr(), 3, uintptr(has), uintptr(unsafe.Pointer(pash)), uintptr(fdwPrepare))
	r = uint32(r0)
	return
}

func AcmStreamReset(has HACMSTREAM, fdwReset uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmStreamReset.Addr(), 2, uintptr(has), uintptr(fdwReset), 0)
	r = uint32(r0)
	return
}

func AcmStreamSize(has HACMSTREAM, cbInput uint32, pdwOutputBytes *uint32, fdwSize uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procacmStreamSize.Addr(), 4, uintptr(has), uintptr(cbInput), uintptr(unsafe.Pointer(pdwOutputBytes)), uintptr(fdwSize), 0, 0)
	r = uint32(r0)
	return
}

func AcmStreamUnprepareHeader(has HACMSTREAM, pash *ACMSTREAMHEADER, fdwUnprepare uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procacmStreamUnprepareHeader.Addr(), 3, uintptr(has), uintptr(unsafe.Pointer(pash)), uintptr(fdwUnprepare))
	r = uint32(r0)
	return
}

func CoRegisterMessageFilter(lpMessageFilter *IMessageFilter, lplpMessageFilter **IMessageFilter) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCoRegisterMessageFilter.Addr(), 2, uintptr(unsafe.Pointer(lpMessageFilter)), uintptr(unsafe.Pointer(lplpMessageFilter)), 0)
	r = HRESULT(r0)
	return
}

func CreateCaptureAudioStateMonitor(audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateCaptureAudioStateMonitor.Addr(), 1, uintptr(unsafe.Pointer(audioStateMonitor)), 0, 0)
	r = HRESULT(r0)
	return
}

func CreateCaptureAudioStateMonitorForCategory(category AUDIO_STREAM_CATEGORY, audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateCaptureAudioStateMonitorForCategory.Addr(), 2, uintptr(category), uintptr(unsafe.Pointer(audioStateMonitor)), 0)
	r = HRESULT(r0)
	return
}

func CreateCaptureAudioStateMonitorForCategoryAndDeviceId(category AUDIO_STREAM_CATEGORY, deviceId *PWSTRElement, audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateCaptureAudioStateMonitorForCategoryAndDeviceId.Addr(), 3, uintptr(category), uintptr(unsafe.Pointer(deviceId)), uintptr(unsafe.Pointer(audioStateMonitor)))
	r = HRESULT(r0)
	return
}

func CreateCaptureAudioStateMonitorForCategoryAndDeviceRole(category AUDIO_STREAM_CATEGORY, role ERole, audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateCaptureAudioStateMonitorForCategoryAndDeviceRole.Addr(), 3, uintptr(category), uintptr(role), uintptr(unsafe.Pointer(audioStateMonitor)))
	r = HRESULT(r0)
	return
}

func CreateRenderAudioStateMonitor(audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateRenderAudioStateMonitor.Addr(), 1, uintptr(unsafe.Pointer(audioStateMonitor)), 0, 0)
	r = HRESULT(r0)
	return
}

func CreateRenderAudioStateMonitorForCategory(category AUDIO_STREAM_CATEGORY, audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateRenderAudioStateMonitorForCategory.Addr(), 2, uintptr(category), uintptr(unsafe.Pointer(audioStateMonitor)), 0)
	r = HRESULT(r0)
	return
}

func CreateRenderAudioStateMonitorForCategoryAndDeviceId(category AUDIO_STREAM_CATEGORY, deviceId *PWSTRElement, audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateRenderAudioStateMonitorForCategoryAndDeviceId.Addr(), 3, uintptr(category), uintptr(unsafe.Pointer(deviceId)), uintptr(unsafe.Pointer(audioStateMonitor)))
	r = HRESULT(r0)
	return
}

func CreateRenderAudioStateMonitorForCategoryAndDeviceRole(category AUDIO_STREAM_CATEGORY, role ERole, audioStateMonitor **IAudioStateMonitor) (r HRESULT) {
	r0, _, _ := syscall.Syscall(procCreateRenderAudioStateMonitorForCategoryAndDeviceRole.Addr(), 3, uintptr(category), uintptr(role), uintptr(unsafe.Pointer(audioStateMonitor)))
	r = HRESULT(r0)
	return
}

func PlaySoundA(pszSound *PSTRElement, hmod HINSTANCE, fdwSound SND_FLAGS) (r BOOL) {
	r0, _, _ := syscall.Syscall(procPlaySoundA.Addr(), 3, uintptr(unsafe.Pointer(pszSound)), uintptr(hmod), uintptr(fdwSound))
	r = BOOL(r0)
	return
}

func PlaySoundW(pszSound *PWSTRElement, hmod HINSTANCE, fdwSound SND_FLAGS) (r BOOL) {
	r0, _, _ := syscall.Syscall(procPlaySoundW.Addr(), 3, uintptr(unsafe.Pointer(pszSound)), uintptr(hmod), uintptr(fdwSound))
	r = BOOL(r0)
	return
}

func AuxGetDevCapsA(uDeviceID uintptr, pac *AUXCAPSA, cbac uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procauxGetDevCapsA.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pac)), uintptr(cbac))
	r = uint32(r0)
	return
}

func AuxGetDevCapsW(uDeviceID uintptr, pac *AUXCAPSW, cbac uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procauxGetDevCapsW.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pac)), uintptr(cbac))
	r = uint32(r0)
	return
}

func AuxGetNumDevs() (r uint32) {
	r0, _, _ := syscall.Syscall(procauxGetNumDevs.Addr(), 0, 0, 0, 0)
	r = uint32(r0)
	return
}

func AuxGetVolume(uDeviceID uint32, pdwVolume *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procauxGetVolume.Addr(), 2, uintptr(uDeviceID), uintptr(unsafe.Pointer(pdwVolume)), 0)
	r = uint32(r0)
	return
}

func AuxOutMessage(uDeviceID uint32, uMsg uint32, dw1 uintptr, dw2 uintptr) (r uint32) {
	r0, _, _ := syscall.Syscall6(procauxOutMessage.Addr(), 4, uintptr(uDeviceID), uintptr(uMsg), uintptr(dw1), uintptr(dw2), 0, 0)
	r = uint32(r0)
	return
}

func AuxSetVolume(uDeviceID uint32, dwVolume uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procauxSetVolume.Addr(), 2, uintptr(uDeviceID), uintptr(dwVolume), 0)
	r = uint32(r0)
	return
}

func MidiConnect(hmi HMIDI, hmo HMIDIOUT, pReserved unsafe.Pointer) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiConnect.Addr(), 3, uintptr(hmi), uintptr(hmo), uintptr(pReserved))
	r = uint32(r0)
	return
}

func MidiDisconnect(hmi HMIDI, hmo HMIDIOUT, pReserved unsafe.Pointer) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiDisconnect.Addr(), 3, uintptr(hmi), uintptr(hmo), uintptr(pReserved))
	r = uint32(r0)
	return
}

func MidiInAddBuffer(hmi HMIDIIN, pmh *MIDIHDR, cbmh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInAddBuffer.Addr(), 3, uintptr(hmi), uintptr(unsafe.Pointer(pmh)), uintptr(cbmh))
	r = uint32(r0)
	return
}

func MidiInClose(hmi HMIDIIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInClose.Addr(), 1, uintptr(hmi), 0, 0)
	r = uint32(r0)
	return
}

func MidiInGetDevCapsA(uDeviceID uintptr, pmic *MIDIINCAPSA, cbmic uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInGetDevCapsA.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pmic)), uintptr(cbmic))
	r = uint32(r0)
	return
}

func MidiInGetDevCapsW(uDeviceID uintptr, pmic *MIDIINCAPSW, cbmic uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInGetDevCapsW.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pmic)), uintptr(cbmic))
	r = uint32(r0)
	return
}

func MidiInGetErrorTextA(mmrError uint32, pszText *PSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInGetErrorTextA.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func MidiInGetErrorTextW(mmrError uint32, pszText *PWSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInGetErrorTextW.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func MidiInGetID(hmi HMIDIIN, puDeviceID *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInGetID.Addr(), 2, uintptr(hmi), uintptr(unsafe.Pointer(puDeviceID)), 0)
	r = uint32(r0)
	return
}

func MidiInGetNumDevs() (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInGetNumDevs.Addr(), 0, 0, 0, 0)
	r = uint32(r0)
	return
}

func MidiInMessage(hmi HMIDIIN, uMsg uint32, dw1 uintptr, dw2 uintptr) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmidiInMessage.Addr(), 4, uintptr(hmi), uintptr(uMsg), uintptr(dw1), uintptr(dw2), 0, 0)
	r = uint32(r0)
	return
}

func MidiInOpen(phmi *HMIDIIN, uDeviceID uint32, dwCallback uintptr, dwInstance uintptr, fdwOpen MIDI_WAVE_OPEN_TYPE) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmidiInOpen.Addr(), 5, uintptr(unsafe.Pointer(phmi)), uintptr(uDeviceID), uintptr(dwCallback), uintptr(dwInstance), uintptr(fdwOpen), 0)
	r = uint32(r0)
	return
}

func MidiInPrepareHeader(hmi HMIDIIN, pmh *MIDIHDR, cbmh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInPrepareHeader.Addr(), 3, uintptr(hmi), uintptr(unsafe.Pointer(pmh)), uintptr(cbmh))
	r = uint32(r0)
	return
}

func MidiInReset(hmi HMIDIIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInReset.Addr(), 1, uintptr(hmi), 0, 0)
	r = uint32(r0)
	return
}

func MidiInStart(hmi HMIDIIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInStart.Addr(), 1, uintptr(hmi), 0, 0)
	r = uint32(r0)
	return
}

func MidiInStop(hmi HMIDIIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInStop.Addr(), 1, uintptr(hmi), 0, 0)
	r = uint32(r0)
	return
}

func MidiInUnprepareHeader(hmi HMIDIIN, pmh *MIDIHDR, cbmh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiInUnprepareHeader.Addr(), 3, uintptr(hmi), uintptr(unsafe.Pointer(pmh)), uintptr(cbmh))
	r = uint32(r0)
	return
}

func MidiOutCacheDrumPatches(hmo HMIDIOUT, uPatch uint32, pwkya *uint16, fuCache uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmidiOutCacheDrumPatches.Addr(), 4, uintptr(hmo), uintptr(uPatch), uintptr(unsafe.Pointer(pwkya)), uintptr(fuCache), 0, 0)
	r = uint32(r0)
	return
}

func MidiOutCachePatches(hmo HMIDIOUT, uBank uint32, pwpa *uint16, fuCache uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmidiOutCachePatches.Addr(), 4, uintptr(hmo), uintptr(uBank), uintptr(unsafe.Pointer(pwpa)), uintptr(fuCache), 0, 0)
	r = uint32(r0)
	return
}

func MidiOutClose(hmo HMIDIOUT) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutClose.Addr(), 1, uintptr(hmo), 0, 0)
	r = uint32(r0)
	return
}

func MidiOutGetDevCapsA(uDeviceID uintptr, pmoc *MIDIOUTCAPSA, cbmoc uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutGetDevCapsA.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pmoc)), uintptr(cbmoc))
	r = uint32(r0)
	return
}

func MidiOutGetDevCapsW(uDeviceID uintptr, pmoc *MIDIOUTCAPSW, cbmoc uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutGetDevCapsW.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pmoc)), uintptr(cbmoc))
	r = uint32(r0)
	return
}

func MidiOutGetErrorTextA(mmrError uint32, pszText *PSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutGetErrorTextA.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func MidiOutGetErrorTextW(mmrError uint32, pszText *PWSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutGetErrorTextW.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func MidiOutGetID(hmo HMIDIOUT, puDeviceID *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutGetID.Addr(), 2, uintptr(hmo), uintptr(unsafe.Pointer(puDeviceID)), 0)
	r = uint32(r0)
	return
}

func MidiOutGetNumDevs() (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutGetNumDevs.Addr(), 0, 0, 0, 0)
	r = uint32(r0)
	return
}

func MidiOutGetVolume(hmo HMIDIOUT, pdwVolume *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutGetVolume.Addr(), 2, uintptr(hmo), uintptr(unsafe.Pointer(pdwVolume)), 0)
	r = uint32(r0)
	return
}

func MidiOutLongMsg(hmo HMIDIOUT, pmh *MIDIHDR, cbmh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutLongMsg.Addr(), 3, uintptr(hmo), uintptr(unsafe.Pointer(pmh)), uintptr(cbmh))
	r = uint32(r0)
	return
}

func MidiOutMessage(hmo HMIDIOUT, uMsg uint32, dw1 uintptr, dw2 uintptr) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmidiOutMessage.Addr(), 4, uintptr(hmo), uintptr(uMsg), uintptr(dw1), uintptr(dw2), 0, 0)
	r = uint32(r0)
	return
}

func MidiOutOpen(phmo *HMIDIOUT, uDeviceID uint32, dwCallback uintptr, dwInstance uintptr, fdwOpen MIDI_WAVE_OPEN_TYPE) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmidiOutOpen.Addr(), 5, uintptr(unsafe.Pointer(phmo)), uintptr(uDeviceID), uintptr(dwCallback), uintptr(dwInstance), uintptr(fdwOpen), 0)
	r = uint32(r0)
	return
}

func MidiOutPrepareHeader(hmo HMIDIOUT, pmh *MIDIHDR, cbmh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutPrepareHeader.Addr(), 3, uintptr(hmo), uintptr(unsafe.Pointer(pmh)), uintptr(cbmh))
	r = uint32(r0)
	return
}

func MidiOutReset(hmo HMIDIOUT) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutReset.Addr(), 1, uintptr(hmo), 0, 0)
	r = uint32(r0)
	return
}

func MidiOutSetVolume(hmo HMIDIOUT, dwVolume uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutSetVolume.Addr(), 2, uintptr(hmo), uintptr(dwVolume), 0)
	r = uint32(r0)
	return
}

func MidiOutShortMsg(hmo HMIDIOUT, dwMsg uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutShortMsg.Addr(), 2, uintptr(hmo), uintptr(dwMsg), 0)
	r = uint32(r0)
	return
}

func MidiOutUnprepareHeader(hmo HMIDIOUT, pmh *MIDIHDR, cbmh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiOutUnprepareHeader.Addr(), 3, uintptr(hmo), uintptr(unsafe.Pointer(pmh)), uintptr(cbmh))
	r = uint32(r0)
	return
}

func MidiStreamClose(hms HMIDISTRM) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiStreamClose.Addr(), 1, uintptr(hms), 0, 0)
	r = uint32(r0)
	return
}

func MidiStreamOpen(phms *HMIDISTRM, puDeviceID *uint32, cMidi uint32, dwCallback uintptr, dwInstance uintptr, fdwOpen uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmidiStreamOpen.Addr(), 6, uintptr(unsafe.Pointer(phms)), uintptr(unsafe.Pointer(puDeviceID)), uintptr(cMidi), uintptr(dwCallback), uintptr(dwInstance), uintptr(fdwOpen))
	r = uint32(r0)
	return
}

func MidiStreamOut(hms HMIDISTRM, pmh *MIDIHDR, cbmh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiStreamOut.Addr(), 3, uintptr(hms), uintptr(unsafe.Pointer(pmh)), uintptr(cbmh))
	r = uint32(r0)
	return
}

func MidiStreamPause(hms HMIDISTRM) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiStreamPause.Addr(), 1, uintptr(hms), 0, 0)
	r = uint32(r0)
	return
}

func MidiStreamPosition(hms HMIDISTRM, lpmmt *MMTIME, cbmmt uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiStreamPosition.Addr(), 3, uintptr(hms), uintptr(unsafe.Pointer(lpmmt)), uintptr(cbmmt))
	r = uint32(r0)
	return
}

func MidiStreamProperty(hms HMIDISTRM, lppropdata *uint8, dwProperty uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiStreamProperty.Addr(), 3, uintptr(hms), uintptr(unsafe.Pointer(lppropdata)), uintptr(dwProperty))
	r = uint32(r0)
	return
}

func MidiStreamRestart(hms HMIDISTRM) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiStreamRestart.Addr(), 1, uintptr(hms), 0, 0)
	r = uint32(r0)
	return
}

func MidiStreamStop(hms HMIDISTRM) (r uint32) {
	r0, _, _ := syscall.Syscall(procmidiStreamStop.Addr(), 1, uintptr(hms), 0, 0)
	r = uint32(r0)
	return
}

func MixerClose(hmx HMIXER) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerClose.Addr(), 1, uintptr(hmx), 0, 0)
	r = uint32(r0)
	return
}

func MixerGetControlDetailsA(hmxobj HMIXEROBJ, pmxcd *MIXERCONTROLDETAILS, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetControlDetailsA.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(pmxcd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func MixerGetControlDetailsW(hmxobj HMIXEROBJ, pmxcd *MIXERCONTROLDETAILS, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetControlDetailsW.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(pmxcd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func MixerGetDevCapsA(uMxId uintptr, pmxcaps *MIXERCAPSA, cbmxcaps uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetDevCapsA.Addr(), 3, uintptr(uMxId), uintptr(unsafe.Pointer(pmxcaps)), uintptr(cbmxcaps))
	r = uint32(r0)
	return
}

func MixerGetDevCapsW(uMxId uintptr, pmxcaps *MIXERCAPSW, cbmxcaps uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetDevCapsW.Addr(), 3, uintptr(uMxId), uintptr(unsafe.Pointer(pmxcaps)), uintptr(cbmxcaps))
	r = uint32(r0)
	return
}

func MixerGetID(hmxobj HMIXEROBJ, puMxId *uint32, fdwId uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetID.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(puMxId)), uintptr(fdwId))
	r = uint32(r0)
	return
}

func MixerGetLineControlsA(hmxobj HMIXEROBJ, pmxlc *MIXERLINECONTROLSA, fdwControls uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetLineControlsA.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(pmxlc)), uintptr(fdwControls))
	r = uint32(r0)
	return
}

func MixerGetLineControlsW(hmxobj HMIXEROBJ, pmxlc *MIXERLINECONTROLSW, fdwControls uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetLineControlsW.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(pmxlc)), uintptr(fdwControls))
	r = uint32(r0)
	return
}

func MixerGetLineInfoA(hmxobj HMIXEROBJ, pmxl *MIXERLINEA, fdwInfo uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetLineInfoA.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(pmxl)), uintptr(fdwInfo))
	r = uint32(r0)
	return
}

func MixerGetLineInfoW(hmxobj HMIXEROBJ, pmxl *MIXERLINEW, fdwInfo uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetLineInfoW.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(pmxl)), uintptr(fdwInfo))
	r = uint32(r0)
	return
}

func MixerGetNumDevs() (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerGetNumDevs.Addr(), 0, 0, 0, 0)
	r = uint32(r0)
	return
}

func MixerMessage(hmx HMIXER, uMsg uint32, dwParam1 uintptr, dwParam2 uintptr) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmixerMessage.Addr(), 4, uintptr(hmx), uintptr(uMsg), uintptr(dwParam1), uintptr(dwParam2), 0, 0)
	r = uint32(r0)
	return
}

func MixerOpen(phmx *uintptr, uMxId uint32, dwCallback uintptr, dwInstance uintptr, fdwOpen uint32) (r uint32) {
	r0, _, _ := syscall.Syscall6(procmixerOpen.Addr(), 5, uintptr(unsafe.Pointer(phmx)), uintptr(uMxId), uintptr(dwCallback), uintptr(dwInstance), uintptr(fdwOpen), 0)
	r = uint32(r0)
	return
}

func MixerSetControlDetails(hmxobj HMIXEROBJ, pmxcd *MIXERCONTROLDETAILS, fdwDetails uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procmixerSetControlDetails.Addr(), 3, uintptr(hmxobj), uintptr(unsafe.Pointer(pmxcd)), uintptr(fdwDetails))
	r = uint32(r0)
	return
}

func SndPlaySoundA(pszSound *PSTRElement, fuSound uint32) (r BOOL) {
	r0, _, _ := syscall.Syscall(procsndPlaySoundA.Addr(), 2, uintptr(unsafe.Pointer(pszSound)), uintptr(fuSound), 0)
	r = BOOL(r0)
	return
}

func SndPlaySoundW(pszSound *PWSTRElement, fuSound uint32) (r BOOL) {
	r0, _, _ := syscall.Syscall(procsndPlaySoundW.Addr(), 2, uintptr(unsafe.Pointer(pszSound)), uintptr(fuSound), 0)
	r = BOOL(r0)
	return
}

func WaveInAddBuffer(hwi HWAVEIN, pwh *WAVEHDR, cbwh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInAddBuffer.Addr(), 3, uintptr(hwi), uintptr(unsafe.Pointer(pwh)), uintptr(cbwh))
	r = uint32(r0)
	return
}

func WaveInClose(hwi HWAVEIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInClose.Addr(), 1, uintptr(hwi), 0, 0)
	r = uint32(r0)
	return
}

func WaveInGetDevCapsA(uDeviceID uintptr, pwic *WAVEINCAPSA, cbwic uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInGetDevCapsA.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pwic)), uintptr(cbwic))
	r = uint32(r0)
	return
}

func WaveInGetDevCapsW(uDeviceID uintptr, pwic *WAVEINCAPSW, cbwic uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInGetDevCapsW.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pwic)), uintptr(cbwic))
	r = uint32(r0)
	return
}

func WaveInGetErrorTextA(mmrError uint32, pszText *PSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInGetErrorTextA.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func WaveInGetErrorTextW(mmrError uint32, pszText *PWSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInGetErrorTextW.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func WaveInGetID(hwi HWAVEIN, puDeviceID *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInGetID.Addr(), 2, uintptr(hwi), uintptr(unsafe.Pointer(puDeviceID)), 0)
	r = uint32(r0)
	return
}

func WaveInGetNumDevs() (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInGetNumDevs.Addr(), 0, 0, 0, 0)
	r = uint32(r0)
	return
}

func WaveInGetPosition(hwi HWAVEIN, pmmt *MMTIME, cbmmt uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInGetPosition.Addr(), 3, uintptr(hwi), uintptr(unsafe.Pointer(pmmt)), uintptr(cbmmt))
	r = uint32(r0)
	return
}

func WaveInMessage(hwi HWAVEIN, uMsg uint32, dw1 uintptr, dw2 uintptr) (r uint32) {
	r0, _, _ := syscall.Syscall6(procwaveInMessage.Addr(), 4, uintptr(hwi), uintptr(uMsg), uintptr(dw1), uintptr(dw2), 0, 0)
	r = uint32(r0)
	return
}

func WaveInOpen(phwi *HWAVEIN, uDeviceID uint32, pwfx *WAVEFORMATEX, dwCallback uintptr, dwInstance uintptr, fdwOpen MIDI_WAVE_OPEN_TYPE) (r uint32) {
	r0, _, _ := syscall.Syscall6(procwaveInOpen.Addr(), 6, uintptr(unsafe.Pointer(phwi)), uintptr(uDeviceID), uintptr(unsafe.Pointer(pwfx)), uintptr(dwCallback), uintptr(dwInstance), uintptr(fdwOpen))
	r = uint32(r0)
	return
}

func WaveInPrepareHeader(hwi HWAVEIN, pwh *WAVEHDR, cbwh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInPrepareHeader.Addr(), 3, uintptr(hwi), uintptr(unsafe.Pointer(pwh)), uintptr(cbwh))
	r = uint32(r0)
	return
}

func WaveInReset(hwi HWAVEIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInReset.Addr(), 1, uintptr(hwi), 0, 0)
	r = uint32(r0)
	return
}

func WaveInStart(hwi HWAVEIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInStart.Addr(), 1, uintptr(hwi), 0, 0)
	r = uint32(r0)
	return
}

func WaveInStop(hwi HWAVEIN) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInStop.Addr(), 1, uintptr(hwi), 0, 0)
	r = uint32(r0)
	return
}

func WaveInUnprepareHeader(hwi HWAVEIN, pwh *WAVEHDR, cbwh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveInUnprepareHeader.Addr(), 3, uintptr(hwi), uintptr(unsafe.Pointer(pwh)), uintptr(cbwh))
	r = uint32(r0)
	return
}

func WaveOutBreakLoop(hwo HWAVEOUT) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutBreakLoop.Addr(), 1, uintptr(hwo), 0, 0)
	r = uint32(r0)
	return
}

func WaveOutClose(hwo HWAVEOUT) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutClose.Addr(), 1, uintptr(hwo), 0, 0)
	r = uint32(r0)
	return
}

func WaveOutGetDevCapsA(uDeviceID uintptr, pwoc *WAVEOUTCAPSA, cbwoc uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetDevCapsA.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pwoc)), uintptr(cbwoc))
	r = uint32(r0)
	return
}

func WaveOutGetDevCapsW(uDeviceID uintptr, pwoc *WAVEOUTCAPSW, cbwoc uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetDevCapsW.Addr(), 3, uintptr(uDeviceID), uintptr(unsafe.Pointer(pwoc)), uintptr(cbwoc))
	r = uint32(r0)
	return
}

func WaveOutGetErrorTextA(mmrError uint32, pszText *PSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetErrorTextA.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func WaveOutGetErrorTextW(mmrError uint32, pszText *PWSTRElement, cchText uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetErrorTextW.Addr(), 3, uintptr(mmrError), uintptr(unsafe.Pointer(pszText)), uintptr(cchText))
	r = uint32(r0)
	return
}

func WaveOutGetID(hwo HWAVEOUT, puDeviceID *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetID.Addr(), 2, uintptr(hwo), uintptr(unsafe.Pointer(puDeviceID)), 0)
	r = uint32(r0)
	return
}

func WaveOutGetNumDevs() (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetNumDevs.Addr(), 0, 0, 0, 0)
	r = uint32(r0)
	return
}

func WaveOutGetPitch(hwo HWAVEOUT, pdwPitch *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetPitch.Addr(), 2, uintptr(hwo), uintptr(unsafe.Pointer(pdwPitch)), 0)
	r = uint32(r0)
	return
}

func WaveOutGetPlaybackRate(hwo HWAVEOUT, pdwRate *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetPlaybackRate.Addr(), 2, uintptr(hwo), uintptr(unsafe.Pointer(pdwRate)), 0)
	r = uint32(r0)
	return
}

func WaveOutGetPosition(hwo HWAVEOUT, pmmt *MMTIME, cbmmt uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetPosition.Addr(), 3, uintptr(hwo), uintptr(unsafe.Pointer(pmmt)), uintptr(cbmmt))
	r = uint32(r0)
	return
}

func WaveOutGetVolume(hwo HWAVEOUT, pdwVolume *uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutGetVolume.Addr(), 2, uintptr(hwo), uintptr(unsafe.Pointer(pdwVolume)), 0)
	r = uint32(r0)
	return
}

func WaveOutMessage(hwo HWAVEOUT, uMsg uint32, dw1 uintptr, dw2 uintptr) (r uint32) {
	r0, _, _ := syscall.Syscall6(procwaveOutMessage.Addr(), 4, uintptr(hwo), uintptr(uMsg), uintptr(dw1), uintptr(dw2), 0, 0)
	r = uint32(r0)
	return
}

func WaveOutOpen(phwo *HWAVEOUT, uDeviceID uint32, pwfx *WAVEFORMATEX, dwCallback uintptr, dwInstance uintptr, fdwOpen MIDI_WAVE_OPEN_TYPE) (r uint32) {
	r0, _, _ := syscall.Syscall6(procwaveOutOpen.Addr(), 6, uintptr(unsafe.Pointer(phwo)), uintptr(uDeviceID), uintptr(unsafe.Pointer(pwfx)), uintptr(dwCallback), uintptr(dwInstance), uintptr(fdwOpen))
	r = uint32(r0)
	return
}

func WaveOutPause(hwo HWAVEOUT) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutPause.Addr(), 1, uintptr(hwo), 0, 0)
	r = uint32(r0)
	return
}

func WaveOutPrepareHeader(hwo HWAVEOUT, pwh *WAVEHDR, cbwh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutPrepareHeader.Addr(), 3, uintptr(hwo), uintptr(unsafe.Pointer(pwh)), uintptr(cbwh))
	r = uint32(r0)
	return
}

func WaveOutReset(hwo HWAVEOUT) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutReset.Addr(), 1, uintptr(hwo), 0, 0)
	r = uint32(r0)
	return
}

func WaveOutRestart(hwo HWAVEOUT) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutRestart.Addr(), 1, uintptr(hwo), 0, 0)
	r = uint32(r0)
	return
}

func WaveOutSetPitch(hwo HWAVEOUT, dwPitch uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutSetPitch.Addr(), 2, uintptr(hwo), uintptr(dwPitch), 0)
	r = uint32(r0)
	return
}

func WaveOutSetPlaybackRate(hwo HWAVEOUT, dwRate uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutSetPlaybackRate.Addr(), 2, uintptr(hwo), uintptr(dwRate), 0)
	r = uint32(r0)
	return
}

func WaveOutSetVolume(hwo HWAVEOUT, dwVolume uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutSetVolume.Addr(), 2, uintptr(hwo), uintptr(dwVolume), 0)
	r = uint32(r0)
	return
}

func WaveOutUnprepareHeader(hwo HWAVEOUT, pwh *WAVEHDR, cbwh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutUnprepareHeader.Addr(), 3, uintptr(hwo), uintptr(unsafe.Pointer(pwh)), uintptr(cbwh))
	r = uint32(r0)
	return
}

func WaveOutWrite(hwo HWAVEOUT, pwh *WAVEHDR, cbwh uint32) (r uint32) {
	r0, _, _ := syscall.Syscall(procwaveOutWrite.Addr(), 3, uintptr(hwo), uintptr(unsafe.Pointer(pwh)), uintptr(cbwh))
	r = uint32(r0)
	return
}
